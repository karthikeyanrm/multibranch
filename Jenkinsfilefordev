User
pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIAL_ID = 'kndocker' // Updated credential ID
    }

    stages {
        stage('Conditional Execution') {
            steps {
                script {
                    def currentBranch = env.GIT_BRANCH
                    // Remove the "origin/" prefix if it exists
                    currentBranch = currentBranch.replaceAll("origin/", "")

                    if (currentBranch ==~ /dev/) {
                        // Stage for 'dev' branch
                        node {
                            // Run inside a specific node to isolate Docker commands
                            withCredentials([
                                usernamePassword(
                                    credentialsId: DOCKER_HUB_CREDENTIAL_ID,
                                    usernameVariable: 'DOCKER_USERNAME',
                                    passwordVariable: 'DOCKER_PASSWORD'
                                )
                            ]) {
                                sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin"
                                sh 'docker-compose build'
                                sh 'docker tag reactjs-demo:latest karthikeyanrm/devrepo:latest'
                                sh 'docker push karthikeyanrm/devrepo:latest'
                                sh 'docker rmi -f reactjs-demo:latest'
                                sh 'docker rmi -f karthikeyanrm/devrepo:latest'
                                sh 'chmod a+x containercheckscript.sh'
                                sh './containercheckscript.sh'
                                sh 'docker pull karthikeyanrm/devrepo:latest'
                                sh 'docker run -d -p 80:80 --name reactjscontainer karthikeyanrm/devrepo:latest'
                            }
                        }
                    } else if (currentBranch ==~ /master/) {
                        // Stage for 'master' branch
                        node {
                            withCredentials([
                                usernamePassword(
                                    credentialsId: DOCKER_HUB_CREDENTIAL_ID,
                                    usernameVariable: 'DOCKER_USERNAME',
                                    passwordVariable: 'DOCKER_PASSWORD'
                                )
                            ]) {
                                sh 'timedatectl'
                                sh 'docker-compose build'
                                sh 'docker images'
                                sh 'docker tag reactjs-demo:latest karthikeyanrm/prodrepo:latest'
                                sh 'docker push karthikeyanrm/prodrepo:latest'
                                sh 'docker rmi -f reactjs-demo:latest'
                                sh 'docker rmi -f karthikeyanrm/prodrepo:latest'
                                sh 'chmod a+x containercheckscript.sh'
                                sh './containercheckscript.sh'
                                sh 'docker pull karthikeyanrm/prodrepo:latest'
                                sh 'docker run -d -p 80:80 --name reactjscontainer karthikeyanrm/prodrepo:latest'
                            }
                        }
                    } else {
                        echo "Branch not recognized: $currentBranch"
                    }
                }
            }
        }
    }
}
