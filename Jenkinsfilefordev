pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIAL_ID = 'kndocker' // Updated credential ID
    }

    stages {
        stage('Conditional Execution') {
            steps {
                script {
                    def currentBranch = env.GIT_BRANCH
                    // Remove the "origin/" prefix if it exists
                    currentBranch = currentBranch.replaceAll("origin/", "")

                    if (currentBranch ==~ /dev/) {
                        sh 'ls -al'

                        // Log in to Docker Hub securely
                        withCredentials([
                            usernamePassword(credentialsId: DOCKER_HUB_CREDENTIAL_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'MY_SECURE_PASSWORD'
                        ]) {
                            sh "echo \$MY_SECURE_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin"
                        }

                        // Add the additional Docker commands
                        sh 'docker-compose build'
                        sh 'docker tag reactjs-demo:latest karthikeyanrm/devrepo:latest'
                        sh 'docker push karthikeyanrm/devrepo:latest'
                        sh 'docker rmi -f reactjs-demo:latest'
                        sh './containercheckscript.sh'
                        sh 'docker pull karthikeyanrm/devrepo:latest'
                        sh 'docker run -d -p 80:80 --name reactjscontainer karthikeyanrm/devrepo:latest'
                    } else if (currentBranch ==~ /master/) {
                        sh 'timedatectl'
                    } else {
                        echo "Branch not recognized: $currentBranch"
                    }
                }
            }
        }
    }
}
